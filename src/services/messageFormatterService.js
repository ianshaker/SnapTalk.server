/**
 * üìù MESSAGE FORMATTER SERVICE
 * 
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram —Å–æ–æ–±—â–µ–Ω–∏–π:
 * - –ï–¥–∏–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 * - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π (–Ω–æ–≤—ã–π/–ø–æ–≤—Ç–æ—Ä–Ω—ã–π)
 * - –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–∞–Ω–Ω—ã—Ö
 * - –õ–µ–≥–∫–æ—Å—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞
 */

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ
 * @param {Date|string} timestamp - –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
 * @returns {string} - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
 */
function formatTimestamp(timestamp = new Date()) {
  const date = timestamp instanceof Date ? timestamp : new Date(timestamp);
  
  return date.toLocaleString('ru-RU', {
    timeZone: 'Europe/Moscow',
    year: 'numeric',
    month: '2-digit',
    day: '2-digit',
    hour: '2-digit',
    minute: '2-digit',
    second: '2-digit'
  });
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram
 * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {string} options.url - URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {string} options.visitorId - ID –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
 * @param {string} [options.pageTitle] - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {Date|string} [options.timestamp] - –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
 * @returns {string} - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 */
function formatBaseMessage({ url, visitorId, pageTitle, timestamp }) {
  const timeFormatted = formatTimestamp(timestamp);
  
  let message = `\`${url}\`\n`;
  message += `Visitor ID: ${visitorId}\n`;
  
  if (pageTitle && pageTitle.trim()) {
    message += `${pageTitle}\n\n`;
  } else {
    message += `\n`;
  }
  
  message += timeFormatted;
  
  return message;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
 * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {string} options.url - URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {string} options.visitorId - ID –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
 * @param {string} [options.pageTitle] - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {Date|string} [options.timestamp] - –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
 * @param {Object} [options.meta] - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
 * @returns {string} - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
 */
export function formatNewVisitorMessage({ url, visitorId, pageTitle, timestamp, meta }) {
  return formatBaseMessage({ url, visitorId, pageTitle, timestamp });
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
 * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {string} options.url - URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {string} options.visitorId - ID –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
 * @param {string} [options.pageTitle] - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {Date|string} [options.timestamp] - –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
 * @param {Object} [options.meta] - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
 * @param {string} [options.previousUrl] - –ü—Ä–µ–¥—ã–¥—É—â–∏–π URL
 * @param {Date|string} [options.firstVisit] - –í—Ä–µ–º—è –ø–µ—Ä–≤–æ–≥–æ –≤–∏–∑–∏—Ç–∞
 * @returns {string} - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
 */
export function formatReturnVisitorMessage({ url, visitorId, pageTitle, timestamp, meta, previousUrl, firstVisit }) {
  return formatBaseMessage({ url, visitorId, pageTitle, timestamp });
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
 * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {string} options.url - URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {string} options.visitorId - ID –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
 * @param {string} [options.pageTitle] - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {Date|string} [options.timestamp] - –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
 * @param {Object} [options.eventData] - –î–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
 * @returns {string} - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 */
export function formatPageTransitionMessage({ url, visitorId, pageTitle, timestamp, eventData }) {
  return formatBaseMessage({ 
    url: url || eventData?.page_url, 
    visitorId, 
    pageTitle: pageTitle || eventData?.page_title, 
    timestamp 
  });
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
 * @param {boolean} isExistingVisitor - –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º
 * @param {boolean} isPageTransition - –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
 * @returns {string} - –ü—Ä–µ—Ñ–∏–∫—Å —Å–æ–æ–±—â–µ–Ω–∏—è
 */
export function getMessagePrefix(isExistingVisitor = false, isPageTransition = false) {
  if (isPageTransition || isExistingVisitor) {
    return `üë£ –ü–ï–†–ï–•–û–î –ù–ê –î–†–£–ì–£–Æ –°–¢–†–ê–ù–ò–¶–£\n\n`;
  } else {
    return `üë§ –ù–û–í–´–ô –ü–û–°–ï–¢–ò–¢–ï–õ–¨\n\n`;
  }
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {string} options.url - URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {string} options.visitorId - ID –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
 * @param {string} [options.pageTitle] - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {Date|string} [options.timestamp] - –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
 * @param {boolean} [options.isExistingVisitor] - –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º
 * @param {boolean} [options.isPageTransition] - –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
 * @param {Object} [options.meta] - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
 * @param {Object} [options.eventData] - –î–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å notifications.js)
 * @returns {Object} - –û–±—ä–µ–∫—Ç —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
 */
export function formatTelegramMessage(options) {
  const {
    url,
    visitorId,
    pageTitle,
    timestamp,
    isExistingVisitor = false,
    isPageTransition = false,
    meta,
    eventData
  } = options;

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ eventData –µ—Å–ª–∏ –æ–Ω–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å notifications.js)
  const finalUrl = url || eventData?.page_url;
  const finalPageTitle = pageTitle || eventData?.page_title;
  const finalTimestamp = timestamp || new Date();

  const message = formatBaseMessage({
    url: finalUrl,
    visitorId,
    pageTitle: finalPageTitle,
    timestamp: finalTimestamp
  });

  const prefix = getMessagePrefix(isExistingVisitor, isPageTransition);

  return {
    message,
    prefix,
    fullMessage: prefix + message
  };
}

/**
 * –ü–∞—Ä—Å–∏–Ω–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—Ä–∞—É–∑–µ—Ä–µ –∏–∑ User-Agent (–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
 * @param {string} userAgent - User-Agent —Å—Ç—Ä–æ–∫–∞
 * @returns {string|null} - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–∞—É–∑–µ—Ä–µ
 */
export function parseBrowserInfo(userAgent) {
  if (!userAgent || typeof userAgent !== 'string') {
    return null;
  }
  
  try {
    // –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–∏–Ω–≥ –æ—Å–Ω–æ–≤–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
    if (userAgent.includes('Chrome/') && !userAgent.includes('Edg/')) {
      const chromeMatch = userAgent.match(/Chrome\/(\d+\.\d+)/);
      return chromeMatch ? `Chrome ${chromeMatch[1]}` : 'Chrome';
    }
    
    if (userAgent.includes('Firefox/')) {
      const firefoxMatch = userAgent.match(/Firefox\/(\d+\.\d+)/);
      return firefoxMatch ? `Firefox ${firefoxMatch[1]}` : 'Firefox';
    }
    
    if (userAgent.includes('Safari/') && !userAgent.includes('Chrome/')) {
      const safariMatch = userAgent.match(/Version\/(\d+\.\d+).*Safari/);
      return safariMatch ? `Safari ${safariMatch[1]}` : 'Safari';
    }
    
    if (userAgent.includes('Edg/')) {
      const edgeMatch = userAgent.match(/Edg\/(\d+\.\d+)/);
      return edgeMatch ? `Edge ${edgeMatch[1]}` : 'Edge';
    }
    
    if (userAgent.includes('Opera/') || userAgent.includes('OPR/')) {
      const operaMatch = userAgent.match(/(?:Opera\/|OPR\/)([\d\.]+)/);
      return operaMatch ? `Opera ${operaMatch[1]}` : 'Opera';
    }
    
    // –ú–æ–±–∏–ª—å–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã
    if (userAgent.includes('Mobile') || userAgent.includes('Android')) {
      if (userAgent.includes('Chrome/')) {
        return 'Chrome Mobile';
      }
      if (userAgent.includes('Safari/')) {
        return 'Safari Mobile';
      }
      return 'Mobile Browser';
    }
    
    return null;
    
  } catch (error) {
    console.error(`Error parsing browser info: ${error.message}`);
    return null;
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export { formatTimestamp };