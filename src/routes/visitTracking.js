// ===== –†–æ—É—Ç–µ—Ä –¥–ª—è —Ç—Ä–µ–∫–∏–Ω–≥–∞ –≤–∏–∑–∏—Ç–æ–≤ =====

import express from 'express';
import { processVisit, updateLastVisit } from '../services/visitTrackingService.js';

const router = express.Router();

/**
 * üéØ POST /track - –¢—Ä–µ–∫–∏–Ω–≥ –≤–∏–∑–∏—Ç–æ–≤ –Ω–∞ —Å–∞–π—Ç
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ—Å–µ—â–µ–Ω–∏—è—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
 */
router.post('/track', async (req, res) => {
  const startTime = Date.now();
  console.log('\nüîÑ === VISIT TRACKING REQUEST ===');
  
  try {
    const { apiKey, visitorId, url, meta } = req.body;
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (!apiKey) {
      console.log('‚ùå Missing apiKey');
      return res.status(400).json({ error: 'API key is required' });
    }
    
    if (!url) {
      console.log('‚ùå Missing url');
      return res.status(400).json({ error: 'URL is required' });
    }
    
    console.log(`üìä Visit data:`);
    console.log(`   API Key: ${apiKey?.slice(0,8)}...`);
    console.log(`   Visitor: ${visitorId?.slice(0,8)}...`);
    console.log(`   URL: ${url}`);
    console.log(`   Meta: ${meta?.title || 'No title'}`);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é pushToClient –∏–∑ app.locals (—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ server.js)
    const pushToClient = req.app.locals.pushToClient;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–∑–∏—Ç–∞
    const result = await processVisit({
      apiKey,
      visitorId,
      url,
      meta
    }, pushToClient);
    
    if (!result.success) {
      console.log(`‚ùå Visit processing failed: ${result.error}`);
      return res.status(400).json({ error: result.error });
    }
    
    // –ï—Å–ª–∏ –≤–∏–∑–∏—Ç –±—ã–ª –ø—Ä–æ–ø—É—â–µ–Ω –∏–∑-–∑–∞ –Ω–µ–¥–∞–≤–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    if (result.skipped) {
      console.log(`‚è∞ Visit skipped: ${result.reason}`);
      return res.json({ 
        success: true, 
        skipped: true, 
        reason: result.reason 
      });
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –≤–∏–∑–∏—Ç–µ
    await updateLastVisit(result.clientId, visitorId, url);
    
    const processingTime = Date.now() - startTime;
    console.log(`‚úÖ Visit tracking completed in ${processingTime}ms`);
    console.log('=== END VISIT TRACKING ===\n');
    
    res.json({
      success: true,
      clientId: result.clientId,
      isFirstVisit: result.isFirstVisit,
      telegramSent: result.telegramSent,
      processingTime
    });
    
  } catch (error) {
    const processingTime = Date.now() - startTime;
    console.error('‚ùå Visit tracking error:', error);
    console.log(`‚ùå Visit tracking failed in ${processingTime}ms`);
    console.log('=== END VISIT TRACKING (ERROR) ===\n');
    
    res.status(500).json({ 
      error: 'Internal server error',
      processingTime
    });
  }
});

export default router;