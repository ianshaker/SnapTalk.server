/**
 * üß† VISITOR CACHE SERVICE
 * 
 * –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è race condition:
 * - In-memory –∫—ç—à –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π
 * - Promise-based –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–ø–∏—Å–µ–π
 * 
 * –í—ã–Ω–µ—Å–µ–Ω –∏–∑ telegramService.js –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
 */

// ===== –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è =====
const CACHE_TTL = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç

class VisitorCache {
  constructor() {
    // –ö—ç—à –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–Ω–æ–≥–æ visitor_id
    this.processingCache = new Map(); // visitorId -> Promise
    
    // –ö—ç—à –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π
    this.dataCache = new Map(); // visitorId -> { topicId, clientId, pageUrl, timestamp }
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ –∫—ç—à–∞
   */
  cleanExpiredCache() {
    const now = Date.now();
    for (const [visitorId, cacheData] of this.dataCache.entries()) {
      if (now - cacheData.timestamp > CACHE_TTL) {
        this.dataCache.delete(visitorId);
        console.log(`üßπ Cleaned expired cache for visitor ${visitorId.slice(0,8)}...`);
      }
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è –∏–∑ –∫—ç—à–∞
   * @param {string} visitorId - ID –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
   * @returns {Object|null} - –î–∞–Ω–Ω—ã–µ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è –∏–ª–∏ null
   */
  getCachedVisitor(visitorId) {
    if (!visitorId) return null;
    
    this.cleanExpiredCache();
    
    const cached = this.dataCache.get(visitorId);
    if (cached) {
      console.log(`üíæ Found visitor ${visitorId.slice(0,8)}... in cache: topic_id=${cached.topicId}`);
      return {
        topic_id: cached.topicId,
        visitor_id: visitorId,
        client_id: cached.clientId,
        created_at: new Date(cached.timestamp).toISOString(),
        page_url: cached.pageUrl
      };
    }
    
    return null;
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è –≤ –∫—ç—à
   * @param {string} visitorId - ID –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
   * @param {Object} data - –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
   */
  setCachedVisitor(visitorId, data) {
    if (!visitorId || !data) return;
    
    this.dataCache.set(visitorId, {
      topicId: data.topicId || data.topic_id,
      clientId: data.clientId || data.client_id,
      pageUrl: data.pageUrl || data.page_url,
      lastSessionStatus: data.lastSessionStatus || data.last_session_status || 'active', // üî• NEW
      timestamp: Date.now()
    });
    
    console.log(`üíæ Cached visitor ${visitorId.slice(0,8)}... with topic_id=${data.topicId || data.topic_id}`);
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ª–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
   * @param {string} visitorId - ID –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
   * @returns {boolean} - true –µ—Å–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
   */
  isProcessing(visitorId) {
    return this.processingCache.has(visitorId);
  }

  /**
   * –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
   * @param {string} visitorId - ID –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
   * @returns {Promise} - Promise –æ–±—Ä–∞–±–æ—Ç–∫–∏
   */
  async waitForProcessing(visitorId) {
    if (!this.processingCache.has(visitorId)) {
      return null;
    }
    
    console.log(`‚è≥ Visitor ${visitorId.slice(0,8)}... is already being processed, waiting...`);
    
    try {
      return await this.processingCache.get(visitorId);
    } catch (error) {
      console.error(`‚ùå Error waiting for visitor processing:`, error);
      this.processingCache.delete(visitorId);
      return null;
    }
  }

  /**
   * –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π
   * @param {string} visitorId - ID –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
   * @param {Function} processingFunction - –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
   * @returns {Promise} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
   */
  async processWithLock(visitorId, processingFunction) {
    if (!visitorId || typeof processingFunction !== 'function') {
      throw new Error('Invalid parameters for processWithLock');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ª–∏ —É–∂–µ
    if (this.processingCache.has(visitorId)) {
      return await this.waitForProcessing(visitorId);
    }

    // –°–æ–∑–¥–∞–µ–º Promise –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    const processingPromise = (async () => {
      try {
        console.log(`üîÑ Starting processing for visitor ${visitorId.slice(0,8)}...`);
        const result = await processingFunction();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫—ç—à, –µ—Å–ª–∏ –æ–Ω –≤–∞–ª–∏–¥–Ω—ã–π
        if (result && result.topic_id) {
          this.setCachedVisitor(visitorId, {
            ...result,
            lastSessionStatus: result.last_session_status // üî• NEW
          });
        }
        
        return result;
      } catch (error) {
        console.error(`‚ùå Error processing visitor ${visitorId.slice(0,8)}...:`, error);
        throw error;
      } finally {
        // –£–¥–∞–ª—è–µ–º –∏–∑ –∫—ç—à–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        this.processingCache.delete(visitorId);
        console.log(`‚úÖ Finished processing for visitor ${visitorId.slice(0,8)}...`);
      }
    })();

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º Promise –≤ –∫—ç—à –æ–±—Ä–∞–±–æ—Ç–∫–∏
    this.processingCache.set(visitorId, processingPromise);
    
    return processingPromise;
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è –≤ –∫—ç—à–µ
   * @param {string} visitorId - ID –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
   * @param {Object} updateData - –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
   */
  updateCachedVisitor(visitorId, updateData) {
    if (!visitorId || !updateData) return;
    
    const existing = this.dataCache.get(visitorId);
    if (existing) {
      this.dataCache.set(visitorId, {
        ...existing,
        ...updateData,
        timestamp: Date.now() // –û–±–Ω–æ–≤–ª—è–µ–º timestamp
      });
      console.log(`üîÑ Updated cache for visitor ${visitorId.slice(0,8)}...`);
    }
  }

  /**
   * üÜï –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ—Å—Å–∏–∏ –≤ –∫—ç—à–µ
   * @param {string} visitorId - ID –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
   * @param {string} status - –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å —Å–µ—Å—Å–∏–∏
   */
  updateLastSessionStatus(visitorId, status) {
    if (!visitorId || !status) return;
    
    const existing = this.dataCache.get(visitorId);
    if (existing) {
      existing.lastSessionStatus = status;
      existing.timestamp = Date.now();
      console.log(`üîÑ Updated last_session_status to '${status}' in cache for visitor ${visitorId.slice(0,8)}...`);
    }
  }

  /**
   * –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è –∏–∑ –∫—ç—à–∞
   * @param {string} visitorId - ID –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
   */
  removeCachedVisitor(visitorId) {
    if (!visitorId) return;
    
    this.dataCache.delete(visitorId);
    this.processingCache.delete(visitorId);
    console.log(`üóëÔ∏è Removed visitor ${visitorId.slice(0,8)}... from cache`);
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—ç—à–∞
   * @returns {Object} - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞
   */
  getStats() {
    return {
      cachedVisitors: this.dataCache.size,
      processingVisitors: this.processingCache.size,
      cacheTTL: CACHE_TTL
    };
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ–≥–æ –∫—ç—à–∞
   */
  clearAll() {
    this.dataCache.clear();
    this.processingCache.clear();
    console.log(`üßπ Cleared all visitor cache`);
  }
}

// –°–æ–∑–¥–∞–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const visitorCache = new VisitorCache();

export default visitorCache;
export { VisitorCache };