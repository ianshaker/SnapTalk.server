// ===== –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è TrackingService =====

import { TrackingService } from './TrackingService.js';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è TrackingService
export async function testTrackingService() {
  console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç TrackingService...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä TrackingService
    const trackingService = new TrackingService({
      serverUrl: 'http://localhost:3000',
      apiKey: 'test-api-key',
      clientId: 'test-client-id'
    });
    
    console.log('‚úÖ TrackingService —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ...');
    console.log('isReady():', trackingService.isReady()); // –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å false
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º extractUTMParams
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º extractUTMParams...');
    const utmParams = trackingService.extractUTMParams();
    console.log('UTM –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', utmParams);
    console.log('‚úÖ extractUTMParams —Ä–∞–±–æ—Ç–∞–µ—Ç');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º getPageMeta
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º getPageMeta...');
    const pageMeta = trackingService.getPageMeta();
    console.log('–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', pageMeta);
    console.log('‚úÖ getPageMeta —Ä–∞–±–æ—Ç–∞–µ—Ç');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é FingerprintJS (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º initFingerprint...');
    try {
      const identifiers = await trackingService.initFingerprint();
      console.log('‚úÖ FingerprintJS –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', identifiers);
      console.log('isReady() –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', trackingService.isReady()); // –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å true
    } catch (error) {
      console.warn('‚ö†Ô∏è FingerprintJS –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å (–≤–æ–∑–º–æ–∂–Ω–æ, –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ —Ä–µ–∫–ª–∞–º—ã):', error.message);
    }
    
    console.log('üéâ –¢–µ—Å—Ç TrackingService –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ TrackingService:', error);
    return false;
  }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞, –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (typeof window !== 'undefined') {
  // –í –±—Ä–∞—É–∑–µ—Ä–µ
  window.testTrackingService = testTrackingService;
  console.log('üß™ –¢–µ—Å—Ç TrackingService –¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞–∫ window.testTrackingService()');
} else {
  // –í Node.js (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
  console.log('üß™ –¢–µ—Å—Ç TrackingService –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
}