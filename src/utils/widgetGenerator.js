// ===== –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä JavaScript –∫–æ–¥–∞ –≤–∏–¥–∂–µ—Ç–∞ =====
export function generateWidgetJS(clientId, config, texts, serverUrl) {
  return `
// SnapTalk Widget v2.0 - Generated for client: ${clientId}
(function() {
  'use strict';
  
  console.log('üöÄ SnapTalk Widget v2.0 –∑–∞–≥—Ä—É–∂–µ–Ω –¥–ª—è: ${clientId}');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–∏–¥–∂–µ—Ç –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
  if (window.SnapTalkWidget) return;
  
  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ –±—ç–∫–µ–Ω–¥–∞
  const WIDGET_CONFIG = ${JSON.stringify(config, null, 2)};
  const WIDGET_TEXTS = ${JSON.stringify(texts, null, 2)};
  const CLIENT_ID = '${clientId}';
  const SERVER_URL = '${serverUrl}';
  
  class SnapTalkWidget {
    constructor() {
      this.isOpen = false;
      this.isGreeting = true;
      this.isTyping = false;
      this.messages = [];
      this.ws = null;
      this.connected = false;
      
      this.init();
    }
    
    init() {
      this.loadStyles();
      this.createWidget();
      this.connectWebSocket();
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –ø–µ—á–∞—Ç–∞–Ω–∏—è
      setTimeout(() => this.showGreetingWithTyping(), 3000);
    }
    
    loadStyles() {
      const style = document.createElement('style');
      style.textContent = \`
        /* SnapTalk Widget Styles */
        .snaptalk-widget { 
          position: fixed; 
          bottom: \${WIDGET_CONFIG.position?.bottom || '1.5rem'}; 
          right: \${WIDGET_CONFIG.position?.right || '1.5rem'}; 
          z-index: \${WIDGET_CONFIG.position?.zIndex || 50}; 
          font-family: system-ui, -apple-system, sans-serif;
          
          /* CSS Variables –¥–ª—è —Ü–≤–µ—Ç–æ–≤ */
          --primary: 220 70% 50%;
          --primary-foreground: 0 0% 98%;
          --primary-hover: 220 70% 45%;
          --card: 0 0% 100%;
          --border: 220 13% 91%;
          --foreground: 224 71% 4%;
          --muted-foreground: 215 16% 47%;
          --accent: 210 40% 94%;
          --accent-foreground: 222 47% 11%;
          --secondary: 210 40% 94%;
          --muted: 210 40% 96%;
        }
        
        /* –ú–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ */
        .snaptalk-btn { 
          width: \${WIDGET_CONFIG.minimizedButton?.width || '3.5rem'}; 
          height: \${WIDGET_CONFIG.minimizedButton?.height || '3.5rem'}; 
          border-radius: \${WIDGET_CONFIG.minimizedButton?.borderRadius || '50%'}; 
          background: \${WIDGET_CONFIG.minimizedButton?.backgroundColor || '#70B347'}; 
          color: \${WIDGET_CONFIG.minimizedButton?.color || 'white'}; 
          border: none; 
          cursor: pointer; 
          box-shadow: \${WIDGET_CONFIG.minimizedButton?.boxShadow || '0 4px 6px -1px rgba(0, 0, 0, 0.1)'}; 
          display: flex; 
          align-items: center; 
          justify-content: center;
          transition: all 0.2s ease;
          animation: snaptalk-scale-in 0.3s ease-out;
        }
        
        .snaptalk-btn:hover { 
          background: \${WIDGET_CONFIG.minimizedButton?.hoverBackgroundColor || '#5a9834'}; 
          transform: scale(1.05);
        }
        
        /* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è */
        .snaptalk-greeting {
          position: relative;
          max-width: \${WIDGET_CONFIG.widget?.maxWidth || '20rem'};
          margin-bottom: 1rem;
          animation: snaptalk-scale-fade-in 0.4s ease-out;
        }
        
        /* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */
        .snaptalk-close-btn {
          position: absolute;
          top: -0.5rem;
          right: -0.5rem;
          width: 1.5rem;
          height: 1.5rem;
          border-radius: 50%;
          background: white;
          border: 1px solid #e5e7eb;
          cursor: pointer;
          box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
          z-index: 10;
          display: flex;
          align-items: center;
          justify-content: center;
          transition: all 0.2s ease;
        }
        
        .snaptalk-close-btn:hover {
          background: #f3f4f6;
        }
        
        /* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è */
        .snaptalk-greeting-container {
          display: flex;
          align-items: end;
          gap: 0.75rem;
        }
        
        /* –ê–≤–∞—Ç–∞—Ä */
        .snaptalk-avatar {
          width: 1.5rem;
          height: 1.5rem;
          border-radius: 50%;
          background: linear-gradient(135deg, \${WIDGET_CONFIG.minimizedButton?.backgroundColor || '#70B347'} 0%, #5a9834 100%);
          display: flex;
          align-items: center;
          justify-content: center;
          flex-shrink: 0;
          color: white;
          font-size: 0.75rem;
        }
        
        /* –ü—É–∑—ã—Ä—å —Å–æ–æ–±—â–µ–Ω–∏—è */
        .snaptalk-message-bubble {
          position: relative;
          max-width: 18rem;
          border-radius: 1rem;
          padding: 0.75rem;
          background: white;
          border: 1px solid #e5e7eb;
          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
          background: linear-gradient(135deg, white 0%, #f9fafb 100%);
        }
        
        /* –•–≤–æ—Å—Ç–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è */
        .snaptalk-message-tail {
          position: absolute;
          bottom: 0;
          right: 2rem;
          width: 0.75rem;
          height: 0.75rem;
          background: white;
          border: 1px solid #e5e7eb;
          border-top: none;
          border-left: none;
          transform: translateY(50%) rotate(45deg);
        }
        
        /* –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è */
        .snaptalk-message-text {
          font-size: 0.75rem;
          line-height: 1.25;
          color: #374151;
          margin: 0;
        }
        
        /* –ö–Ω–æ–ø–∫–∞ "–û—Ç–≤–µ—Ç–∏—Ç—å" */
        .snaptalk-reply-btn {
          background: \${WIDGET_CONFIG.minimizedButton?.backgroundColor || '#70B347'};
          color: white;
          border: none;
          padding: 0.5rem 0.75rem;
          border-radius: 0.375rem;
          font-size: 0.75rem;
          cursor: pointer;
          margin-top: 0.5rem;
          box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
          transition: all 0.2s ease;
          animation: snaptalk-fade-in 0.3s ease-out 0.5s both;
        }
        
        .snaptalk-reply-btn:hover {
          background: \${WIDGET_CONFIG.minimizedButton?.hoverBackgroundColor || '#5a9834'};
          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }
        
        /* –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—á–∞—Ç–∞–Ω–∏—è */
        .snaptalk-typing {
          display: inline-block;
        }
        
        .snaptalk-typing-dot {
          display: inline-block;
          width: 4px;
          height: 4px;
          border-radius: 50%;
          background: #9ca3af;
          margin: 0 1px;
          animation: snaptalk-typing 1.4s infinite ease-in-out;
        }
        
        .snaptalk-typing-dot:nth-child(1) { animation-delay: -0.32s; }
        .snaptalk-typing-dot:nth-child(2) { animation-delay: -0.16s; }
        .snaptalk-typing-dot:nth-child(3) { animation-delay: 0s; }
        
        /* –ê–Ω–∏–º–∞—Ü–∏–∏ */
        @keyframes snaptalk-scale-in {
          0% { transform: scale(0); opacity: 0; }
          100% { transform: scale(1); opacity: 1; }
        }
        
        @keyframes snaptalk-scale-fade-in {
          0% { transform: scale(0.8); opacity: 0; }
          100% { transform: scale(1); opacity: 1; }
        }
        
        @keyframes snaptalk-fade-in {
          0% { opacity: 0; transform: translateY(10px); }
          100% { opacity: 1; transform: translateY(0); }
        }
        
        @keyframes snaptalk-typing {
          0%, 80%, 100% { transform: scale(0.8); opacity: 0.5; }
          40% { transform: scale(1); opacity: 1; }
        }
        
        /* –°–∫—Ä—ã—Ç–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */
        .snaptalk-hidden { display: none !important; }
        
        /* –ò–∫–æ–Ω–∫–∏ */
        .snaptalk-icon { width: 1em; height: 1em; fill: currentColor; }
      \`;
      document.head.appendChild(style);
    }
    
    createWidget() {
      this.container = document.createElement('div');
      this.container.className = 'snaptalk-widget';
      this.container.innerHTML = \`
        <!-- –ú–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ -->
        <button class="snaptalk-btn" id="snaptalk-toggle">
          <svg class="snaptalk-icon" viewBox="0 0 24 24">
            <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"/>
          </svg>
        </button>
        
        <!-- –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ -->
        <div class="snaptalk-greeting snaptalk-hidden" id="snaptalk-greeting">
          <button class="snaptalk-close-btn" id="snaptalk-close-greeting">
            <svg class="snaptalk-icon" viewBox="0 0 24 24" style="width: 12px; height: 12px;">
              <line x1="18" y1="6" x2="6" y2="18"></line>
              <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
          </button>
          
          <div class="snaptalk-greeting-container">
            <div class="snaptalk-avatar">üí¨</div>
            <div class="snaptalk-message-bubble">
              <div class="snaptalk-message-tail"></div>
              <p class="snaptalk-message-text" id="snaptalk-greeting-text"></p>
              <button class="snaptalk-reply-btn snaptalk-hidden" id="snaptalk-reply">
                \${WIDGET_TEXTS.reply || '–û—Ç–≤–µ—Ç–∏—Ç—å'}
              </button>
            </div>
          </div>
        </div>
      \`;
      
      document.body.appendChild(this.container);
      this.bindEvents();
    }
    
    bindEvents() {
      document.getElementById('snaptalk-toggle').addEventListener('click', () => this.toggleWidget());
      document.getElementById('snaptalk-close-greeting').addEventListener('click', () => this.hideGreeting());
      document.getElementById('snaptalk-reply').addEventListener('click', () => this.openChat());
    }
    
    connectWebSocket() {
      // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
      console.log('WebSocket connection will be implemented');
    }
    
    async showGreetingWithTyping() {
      if (this.isOpen) return;
      
      const greetingEl = document.getElementById('snaptalk-greeting');
      const textEl = document.getElementById('snaptalk-greeting-text');
      const replyBtn = document.getElementById('snaptalk-reply');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
      greetingEl.classList.remove('snaptalk-hidden');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–µ—á–∞—Ç–∞–Ω–∏—è
      textEl.innerHTML = \`
        <span class="snaptalk-typing">
          <span class="snaptalk-typing-dot"></span>
          <span class="snaptalk-typing-dot"></span>
          <span class="snaptalk-typing-dot"></span>
        </span>
      \`;
      
      // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
      setTimeout(() => {
        this.typeText(textEl, WIDGET_TEXTS.greeting || '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≥–æ—Ç–æ–≤ –≤–∞—Å –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å. –ö–∞–∫–∏–µ —É –≤–∞—Å –≤–æ–ø—Ä–æ—Å—ã?', () => {
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–≤–µ—Ç–∏—Ç—å"
          replyBtn.classList.remove('snaptalk-hidden');
        });
      }, 2000);
    }
    
    typeText(element, text, callback) {
      element.innerHTML = '';
      let i = 0;
      
      const typeChar = () => {
        if (i < text.length) {
          element.innerHTML += text.charAt(i);
          i++;
          setTimeout(typeChar, 30); // –°–∫–æ—Ä–æ—Å—Ç—å –ø–µ—á–∞—Ç–∞–Ω–∏—è
        } else if (callback) {
          callback();
        }
      };
      
      typeChar();
    }
    
    hideGreeting() {
      document.getElementById('snaptalk-greeting').classList.add('snaptalk-hidden');
    }
    
    toggleWidget() {
      if (this.isOpen) {
        this.closeChat();
      } else {
        this.openChat();
      }
    }
    
    openChat() {
      this.isOpen = true;
      this.hideGreeting();
      
      // TODO: –û—Ç–∫—Ä—ã—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —á–∞—Ç
      alert('–ß–∞—Ç –æ—Ç–∫—Ä–æ–µ—Ç—Å—è! –ö–ª–∏–µ–Ω—Ç: \${WIDGET_TEXTS.managerName || '–ü–æ–¥–¥–µ—Ä–∂–∫–∞'}');
      console.log('üí¨ –ß–∞—Ç –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞:', CLIENT_ID);
    }
    
    closeChat() {
      this.isOpen = false;
      // TODO: –ó–∞–∫—Ä—ã—Ç—å —á–∞—Ç
    }
  }
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–∂–µ—Ç
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      window.SnapTalkWidget = new SnapTalkWidget();
    });
  } else {
    window.SnapTalkWidget = new SnapTalkWidget();
  }
  
})();
`;
}